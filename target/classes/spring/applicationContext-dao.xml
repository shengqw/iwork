<?xml version="1.0" encoding="UTF-8"?> 
 <beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:mvc="http://www.springframework.org/schema/mvc"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xmlns:context="http://www.springframework.org/schema/context"
  xsi:schemaLocation="http://www.springframework.org/schema/context 
 http://www.springframework.org/schema/context/spring-context-3.2.xsd 
 http://www.springframework.org/schema/mvc
 http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
 http://www.springframework.org/schema/aop
 http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
 http://www.springframework.org/schema/tx
 http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
 http://www.springframework.org/schema/beans 
 http://www.springframework.org/schema/beans/spring-beans-3.2.xsd ">
 	<!-- 加载db.properties -->
 	<context:property-placeholder location="classpath:db.properties"/>
 	<!-- dataSource -->
<!--  	<bean id="dataSource"  -->
<!--  		class="org.apache.commons.dbcp.BasicDataSource" -->
<!--  		destroy-method="close"> -->
<!--  		<property name="driverClassName" value="${jdbc.drive}" /> -->
<!--  		<property name="url" value="${jdbc.url}" /> -->
<!--  		<property name="username" value="${jdbc.username}" /> -->
<!--  		<property name="password" value="${jdbc.password}" /> -->
<!--  		<property name="maxActive" value="10" /> -->
<!--  		<property name="minIdle" value="5" /> -->
<!--  	</bean> -->
	
	<bean id="dataSourceJeecg" 
 		class="com.alibaba.druid.pool.DruidDataSource"
 		destroy-method="close">
 		<property name="driverClassName" value="${jdbc.drive}" />
 		<property name="url" value="${jdbc.url.jeecg}" />
 		<property name="username" value="${jdbc.username}" />
 		<property name="password" value="${jdbc.password}" />
 		<property name="maxActive" value="10" />
 		<property name="minIdle" value="5" />
 	</bean>
 	<bean id="dataSourcegwall" 
 		class="com.alibaba.druid.pool.DruidDataSource"
 		destroy-method="close">
 		<property name="driverClassName" value="${jdbc.drive}" />
 		<property name="url" value="${jdbc.url.gwall}" />
 		<property name="username" value="${jdbc.username}" />
 		<property name="password" value="${jdbc.password}" />
 		<property name="maxActive" value="10" />
 		<property name="minIdle" value="5" />
 	</bean>
 	
 	<bean id="multipleDataSource" class="com.qiwen.web.util.MultipleDataSource">
        <property name="defaultTargetDataSource" ref="dataSourceJeecg"/>
        <property name="targetDataSources">
            <map>     
                <!-- 注意这里的value是和上面的DataSource的id对应，key要和下面的CustomerContextHolder中的常量对应 -->
                <entry value-ref="dataSourceJeecg" key="jeecgDataSource"/>
                <entry value-ref="dataSourcegwall" key="gwallDataSource"/>
            </map>   
        </property>
    </bean>
 
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:mybatis/sqlMapConfig.xml"></property>
		<property name="dataSource" ref="multipleDataSource"></property>
	</bean>
	
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype" >   
          <constructor-arg index="0" ref="sqlSessionFactory" />   
    </bean>
    
    <bean id="bankDaoTemp" class="com.qiwen.web.dao.impl.BankDaoTempImpl" ></bean>

<!--  	<bean id="bankDao" class="com.qiwen.web.dao.impl.BankDaoImpl"> -->
<!--  		<property name="sqlSessionFactory" ref="sqlSessionFactory"></property> -->
<!--  	</bean> -->
 	
<!--  	<bean id="bankMapper" class="org.mybatis.spring.mapper.MapperFactoryBean"> -->
<!--  		<property name="mapperInterface" value="com.qiwen.web.dao.BankDaoMapper" /> -->
<!--  		<property name="sqlSessionFactory" ref="sqlSessionFactory"></property> -->
<!--  	</bean> -->
 	
 	<!-- 批量扫描 -->
 	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
 		<property name="basePackage" value="com.qiwen.web"/>
 		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
 	</bean>
 	
 	
 	

 	
</beans>